[gd_scene load_steps=8 format=3 uid="uid://daua6wcirk8pg"]

[ext_resource type="Script" uid="uid://cun2304gg4oab" path="res://open_program/open_program_scene.gd" id="1_023yp"]
[ext_resource type="Script" uid="uid://d3rknkb2c67bb" path="res://game/game.gd" id="2_yxl0w"]
[ext_resource type="Script" uid="uid://qjud1fkpjgww" path="res://game/cell_grid/cell_grid.gd" id="3_4hq04"]
[ext_resource type="PackedScene" uid="uid://dqfkfo3tt1mbg" path="res://game/cell_grid/cell/cell.tscn" id="4_6i576"]
[ext_resource type="Texture2D" uid="uid://1t5rn58krst4" path="res://game/cell_grid/chars.png" id="5_d4i4x"]
[ext_resource type="Script" uid="uid://c3ifr7o1jca3d" path="res://interpreter/console.gd" id="6_4hq04"]

[sub_resource type="AtlasTexture" id="AtlasTexture_nrdvb"]
atlas = ExtResource("5_d4i4x")
region = Rect2(0, 0, 6, 6)

[node name="OpenProgramScene" type="Control" node_paths=PackedStringArray("_file_dialog", "_console", "_code_edit", "_open_from_file_button", "_run_button", "_clear_console_button", "_open_manual_button", "_close_manual_button", "manual")]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_023yp")
_file_dialog = NodePath("FileDialog")
_console = NodePath("HSplitContainer/Console/VBoxContainer2/ColorRect/Console")
_code_edit = NodePath("HSplitContainer/Program/VBoxContainer/CodeEdit")
_open_from_file_button = NodePath("HSplitContainer/Program/VBoxContainer/ButtonContainer/OpenFromFileButton")
_run_button = NodePath("HSplitContainer/Program/VBoxContainer/ButtonContainer/RunButton")
_clear_console_button = NodePath("HSplitContainer/Console/VBoxContainer2/ButtonContainer/ClearButton")
_open_manual_button = NodePath("HSplitContainer/Program/VBoxContainer/ButtonContainer/ManualButton")
_close_manual_button = NodePath("Manual/CloseManualButton")
manual = NodePath("Manual")

[node name="BG" type="ColorRect" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.21516, 0.1044, 0.36, 1)

[node name="FileDialog" type="FileDialog" parent="."]
title = "Open a File"
initial_position = 1
ok_button_text = "Open"
file_mode = 0
access = 2
filters = PackedStringArray("*.wolf", "*.txt")
use_native_dialog = true

[node name="Game" type="Control" parent="." node_paths=PackedStringArray("timer", "cell_grid")]
visible = false
layout_mode = 2
anchors_preset = 0
offset_left = 582.0
offset_right = 1152.0
offset_bottom = 648.0
size_flags_horizontal = 3
script = ExtResource("2_yxl0w")
timer = NodePath("Timer")
cell_grid = NodePath("GridRatioifier/CellGrid")
metadata/_custom_type_script = "uid://d3rknkb2c67bb"

[node name="GridRatioifier" type="AspectRatioContainer" parent="Game"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="CellGrid" type="GridContainer" parent="Game/GridRatioifier"]
layout_mode = 2
theme_override_constants/h_separation = 0
theme_override_constants/v_separation = 0
columns = 3
script = ExtResource("3_4hq04")
cell_scene = ExtResource("4_6i576")
chars = SubResource("AtlasTexture_nrdvb")

[node name="Timer" type="Timer" parent="Game"]
wait_time = 0.1

[node name="HSplitContainer" type="HSplitContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="Program" type="Control" parent="HSplitContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VBoxContainer" type="VBoxContainer" parent="HSplitContainer/Program"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="ButtonContainer" type="HBoxContainer" parent="HSplitContainer/Program/VBoxContainer"]
layout_mode = 2

[node name="ManualButton" type="Button" parent="HSplitContainer/Program/VBoxContainer/ButtonContainer"]
layout_mode = 2
text = "Manual"

[node name="OpenFromFileButton" type="Button" parent="HSplitContainer/Program/VBoxContainer/ButtonContainer"]
layout_mode = 2
text = "Open From File"

[node name="RunButton" type="Button" parent="HSplitContainer/Program/VBoxContainer/ButtonContainer"]
layout_mode = 2
text = "Run"

[node name="CodeEdit" type="CodeEdit" parent="HSplitContainer/Program/VBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
size_flags_vertical = 3
text = "print(\"Hello \" + \"world\")"
gutters_draw_line_numbers = true
auto_brace_completion_enabled = true

[node name="Console" type="Control" parent="HSplitContainer"]
layout_mode = 2
size_flags_horizontal = 3

[node name="VBoxContainer2" type="VBoxContainer" parent="HSplitContainer/Console"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="ButtonContainer" type="HBoxContainer" parent="HSplitContainer/Console/VBoxContainer2"]
layout_mode = 2

[node name="ClearButton" type="Button" parent="HSplitContainer/Console/VBoxContainer2/ButtonContainer"]
layout_mode = 2
text = "Clear"

[node name="ColorRect" type="ColorRect" parent="HSplitContainer/Console/VBoxContainer2"]
layout_mode = 2
size_flags_vertical = 3
color = Color(0.202903, 0.1363, 0.29, 1)

[node name="Console" type="RichTextLabel" parent="HSplitContainer/Console/VBoxContainer2/ColorRect"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
size_flags_horizontal = 3
size_flags_vertical = 3
bbcode_enabled = true
script = ExtResource("6_4hq04")

[node name="Manual" type="ColorRect" parent="."]
visible = false
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
color = Color(0.27451, 0, 0.627451, 1)

[node name="TabContainer" type="TabContainer" parent="Manual"]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
current_tab = 0

[node name="Data Types" type="RichTextLabel" parent="Manual/TabContainer"]
layout_mode = 2
bbcode_enabled = true
text = "	[font_size=24][b][u]Numerical:[/u][/b][/font_size]

	[b]int:[/b]
[ul] Stores an integer
 Just write some digits without any decimal point and it will be an int
 Falsey if 0, otherwise truthy[/ul]

	[b]float:[/b]
[ul] Stores a floating point number
 Just write some digits with a decimal point and it will be a float
 Falsey if 0, otherwise truthy[/ul]

	[b]char:[/b]
[ul] Stores an unsigned 8 bit integer
 Also is an ascii character
 If you put the desired character in single quotes, you will get a char
 Falsey if 0, otherwise truthy[/ul]

	[font_size=24][b][u]Other:[/u][/b][/font_size]
	[b]string:[/b]
[ul] Stores text of any length
 Wrap the desired text in double quotes to get a string
 Falsey if empty (\"\"), otherwise truthy[/ul]

	[b]bool:[/b]
[ul] Stores a boolean value
 Just write true or false and it will make a bool
 Falsey if false, truthy if true[/ul]

	[b]null:[/b]
[ul] Is an unset value
 Just write null and you will get null
 Falsey
 Values can't be casted to null or declared as null[/ul]

	[b]mixed:[/b]
[ul] Could be of multiple different types depending on operator evaluation
 Must be cast to different type for use
 Values can't be casted to mixed or declared as mixed[/ul]"
metadata/_tab_index = 0

[node name="Operators" type="RichTextLabel" parent="Manual/TabContainer"]
visible = false
layout_mode = 2
bbcode_enabled = true
text = "	[font_size=24][b][u]Logical:[/u][/b][/font_size]

	[b]not[/b]
[ul] Takes a right input
 Converts input into a boolean and performs a logical not on it
 Returns a bool[/ul]

	[b]and (also &&)[/b]
[ul] Takes a left input and a right input
 Returns left if it is falsey, otherwise returns right
 Returns input type[/ul]

	[b]or (also ||)[/b]
[ul] Takes a left input and a right input
 Returns left if it is truthy, otherwise returns right
 Returns input type[/ul]

	[b]xor (also ^^)[/b]
[ul] Takes a left input and a right input
 Converts inputs into booleans and performs a logical xor on them
 Returns a bool[/ul]

	[b]nand[/b]
[ul] Takes a left input and a right input
 Converts inputs into booleans and performs a logical nand on them
 Returns a bool[/ul]

	[b]nor[/b]
[ul] Takes a left input and a right input
 Converts inputs into booleans and performs a logical nor on them
 Returns a bool[/ul]

	[b]xnor[/b]
[ul] Takes a left input and a right input
 Converts inputs into booleans and performs a logical xnor on them
 Returns a bool[/ul]

	[font_size=24][b][u]Bitwise:[/u][/b][/font_size]

	[b]&[/b]
[ul] Takes a left input and a right input
 Inputs must be integers (chars or ints)
 Does a bitwise and between the bits of the left and the bits of the right
 Returns an int[/ul]

	[b]|[/b]
[ul] Takes a left input and a right input
 Inputs must be integers (chars or ints)
 Does a bitwise or between the bits of the left and the bits of the right
 Returns an int[/ul]

	[b]^[/b]
[ul] Takes a left input and a right input
 Inputs must be integers (chars or ints)
 Does a bitwise xor between the bits of the left and the bits of the right
 Returns an int[/ul]

	[b]<<[/b]
[ul] Takes a left input and a right input
 Inputs must be integers (chars or ints)
 Returns left input shifted right input bits to the left
 Returns an int[/ul]

	[b]>>[/b]
[ul] Takes a left input and a right input
 Inputs must be integers (chars or ints)
 Returns left input shifted right input bits to the right
 Returns an int[/ul]

	[font_size=24][b][u]Arithmetic:[/u][/b][/font_size]

	[b]- (unary)[/b]
[ul] Takes a right input
 Input must be signed number (int or float)
 Returns input with sign flipped (negative becomes positive, postive becomes negative)
 Returns float if either input is a float. Otherwise, returns int[/ul]

	[b]+ (addition)[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Adds right input to left input
 Returns float if either input is a float. Otherwise, returns int if either input is an int. Otherwise, returns char[/ul]

	[b]- (binary)[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Subtracts right input from left input
 Returns float if either input is a float. Otherwise, returns int if either input is an int. Otherwise, returns char[/ul]

	[b]*[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Multiplies left input by right input
 Returns float if either input is a float. Otherwise, returns int if either input is an int. Otherwise, returns char[/ul]

	[b]/[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Divides left input by right input
 Returns float if either input is a float. Otherwise, returns int if either input is an int. Otherwise, returns char[/ul]

	[b]**[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Returns left input to the power of right input
 Returns float if either input is a float. Otherwise, returns int if either input is an int. Otherwise, returns char[/ul]

	[font_size=24][b][u]Comparison:[/u][/b][/font_size]

	[b]>[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Returns true if left input is greater than right input. Otherwise, returns false
 Returns a bool[/ul]

	[b]>=[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Returns true if left input is greater than or equal to right input. Otherwise, returns false
 Returns a bool[/ul]

	[b]<[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Returns true if left input is less than right input. Otherwise, returns false
 Returns a bool[/ul]

	[b]<=[/b]
[ul] Takes a left input and a right input
 Inputs must be numbers (int, float, or char)
 Returns true if left input is less than or equal to right input. Otherwise, returns false
 Returns a bool[/ul]

	[b]==[/b]
[ul] Takes a left input and a right input
 Inputs must both be numbers (int, float, or char) or both be the same type
 Returns true if left input has the same value as right input. Otherwise, returns false
 Returns a bool[/ul]

	[b]!=[/b]
[ul] Takes a left input and a right input
 Inputs must both be numbers (int, float, or char) or both be the same type
 Returns true if left input has a different value from right input. Otherwise, returns false
 Returns a bool[/ul]

	[font_size=24][b][u]Misc:[/u][/b][/font_size]

	[b]+ (concatination)[/b]
[ul] Takes a left input and a right input
 Inputs must be strings
 Appends right input to the end of left input
 Returns a string[/ul]

	[b]if else[/b]
[ul] Takes a left input, a middle input, and a right input
 Left input should be before if, middle input should be between if and else, and right input should be after else
 Returns left input if middle input is truthy. Otherwise, returns right input
 Returns input type[/ul]

	[b]as[/b]
[ul] Takes a left input and a type
 Left input should be a value and type should be on the right
 Returns left input cast as the given type
 Returns given type[/ul]

	[b]()[/b]
[ul] Takes a middle input
 Middle input should be between \"(\" and \")\"
 Returns middle input
 Returns input type[/ul]"
metadata/_tab_index = 1

[node name="Operators Precedence" type="RichTextLabel" parent="Manual/TabContainer"]
visible = false
layout_mode = 2
bbcode_enabled = true
text = "	[font_size=24][b][u]Operators From First Evaluated to Last:[/u][/b][/font_size]

[ul] Literal values (ints, floats, chars, strings, bools, and null), ()
 - (unary), ~
 **
 *, /, %
 +, - (binary)
 &, |, ^, <<, >>
 as
 >, >=, <, <=, ==, !=
 not (also !)
 and (also &&), or (also ||), xor (also ^^), nand, nor, xnor
 if else[/ul]"
metadata/_tab_index = 2

[node name="CloseManualButton" type="Button" parent="Manual"]
layout_mode = 1
anchors_preset = 1
anchor_left = 1.0
anchor_right = 1.0
offset_left = -8.0
offset_bottom = 8.0
grow_horizontal = 0
text = "Close"
